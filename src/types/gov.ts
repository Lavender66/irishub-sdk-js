import { Coin, Msg } from './types';

// Generated by https://quicktype.io

export interface BasicProposal {
  proposal_id: string;
  title: string;
  description: string;
  proposal_type: string;
  proposal_status: string;
  tally_result: TallyResult;
  submit_time: string;
  deposit_end_time: string;
  total_deposit: Coin[];
  voting_start_time: string;
  voting_end_time: string;
  proposer: string;
}

export interface TallyResult {
  yes: string;
  abstain: string;
  no: string;
  no_with_veto: string;
  system_voting_power: string;
}

export interface Proposal {
  BasicProposal: BasicProposal;
  ProtocolDefinition: {
    version: string;
    software: string;
    height: string;
    threshold: string;
  };
  Params: {
    key: string;
    value: string;
  };
  TaxUsage: {
    usage: string;
    dest_address: string;
    percent: string;
  };
  f_token: {
    base_token: {
      id: string;
      family: string;
      source: string;
      gateway: string;
      symbol: string;
      name: string;
      decimal: number;
      canonical_symbol: string;
      min_unit_alias: string;
      initial_supply: string;
      max_supply: string;
      mintable: boolean;
      owner: string;
    };
  };
}

export interface QueryProposalsParams {
  Voter?: string;
  Depositor?: string;
  ProposalStatus?: string;
  Limit?: number;
}
